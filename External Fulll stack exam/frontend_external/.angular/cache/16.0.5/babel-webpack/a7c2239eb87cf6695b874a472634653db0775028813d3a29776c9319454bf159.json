{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  //registrer user\n  register(formdata) {\n    return this.http.post(\"https://localhost:7215/api/AuthCotroller/register\", formdata);\n  }\n  //login user\n  login(formdata) {\n    return this.http.post(\"https://localhost:7215/api/AuthCotroller/login\", formdata);\n  }\n  savetoken(x) {\n    console.log(x.role);\n    console.log(x.token.value);\n    this.role = x.role;\n    this.token = x.token.value;\n    localStorage.setItem('token', this.token);\n  }\n  gettoken() {\n    localStorage.getItem('token');\n  }\n  //logoout\n  logout() {\n    localStorage.clear();\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["AuthService","constructor","http","register","formdata","post","login","savetoken","x","console","log","role","token","value","localStorage","setItem","gettoken","getItem","logout","clear","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Twinkle\\Desktop\\External exam\\frontend_external\\src\\app\\service\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http:HttpClient) { }\n\n  token!:any;\n  role!:any;\n\n  //registrer user\n\n  register(formdata:any){\n\n    return this.http.post(\"https://localhost:7215/api/AuthCotroller/register\",formdata);\n\n  }\n\n\n\n    //login user\n\n    login(formdata:any){\n\n      return this.http.post(\"https://localhost:7215/api/AuthCotroller/login\",formdata);\n\n    }\n\n\n\n    savetoken(x:any){\n      console.log(x.role);\n      console.log(x.token.value);\n      this.role=x.role;\n      this.token=x.token.value;\n      localStorage.setItem('token',this.token);\n\n    }\n\n    gettoken(){\n      localStorage.getItem('token');\n    }\n\n\n    //logoout\n    logout(){\n      localStorage.clear();\n    }\n}\n"],"mappings":";;AAGA,MAGaA,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAKvC;EAEAC,QAAQA,CAACC,QAAY;IAEnB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,mDAAmD,EAACD,QAAQ,CAAC;EAErF;EAIE;EAEAE,KAAKA,CAACF,QAAY;IAEhB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,gDAAgD,EAACD,QAAQ,CAAC;EAElF;EAIAG,SAASA,CAACC,CAAK;IACbC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,IAAI,CAAC;IACnBF,OAAO,CAACC,GAAG,CAACF,CAAC,CAACI,KAAK,CAACC,KAAK,CAAC;IAC1B,IAAI,CAACF,IAAI,GAACH,CAAC,CAACG,IAAI;IAChB,IAAI,CAACC,KAAK,GAACJ,CAAC,CAACI,KAAK,CAACC,KAAK;IACxBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAC,IAAI,CAACH,KAAK,CAAC;EAE1C;EAEAI,QAAQA,CAAA;IACNF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EAC/B;EAGA;EACAC,MAAMA,CAAA;IACJJ,YAAY,CAACK,KAAK,EAAE;EACtB;;AA5CSnB,WAAW,C;mBAAXA,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXvB,WAAW,C;SAAXA,WAAW;EAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEP1B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}