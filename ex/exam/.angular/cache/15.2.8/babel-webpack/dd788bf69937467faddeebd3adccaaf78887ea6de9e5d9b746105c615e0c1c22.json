{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(fb, auth) {\n    this.fb = fb;\n    this.auth = auth;\n  }\n  ngOnInit() {\n    this.login = this.fb.group({\n      Email: ['', [Validators.required, Validators.email]],\n      Password: ['', [Validators.required, Validators.maxLength(8)]]\n    });\n  }\n  submitform() {\n    console.log(this.login.value);\n    this.auth.login(this.login.value).subscribe(x => {\n      console.log(x);\n      console.log(\"login succefully\");\n      this.auth.storetoken(x);\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 17,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-5\", \"w-25\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"formGroup\"], [\"for\", \"Email\"], [\"type\", \"email\", \"id\", \"Email\", \"formControlName\", \"Email\", 1, \"form-control\"], [\"for\", \"Password\"], [\"type\", \"password\", \"id\", \"Password\", \"formControlName\", \"Password\", 1, \"form-control\"], [\"routerLink\", \"\\\\register\", 1, \"text-dark\", \"text-decoration-none\", \"fw-bold\", \"h4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submitform();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵelementStart(11, \"p\")(12, \"a\", 7);\n      i0.ɵɵtext(13, \"Not have an account?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"button\", 8);\n      i0.ɵɵtext(16, \"login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.login);\n    }\n  },\n  dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAQnE,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,EAAc,EAASC,IAAgB;IAAvC,OAAE,GAAFD,EAAE;IAAqB,SAAI,GAAJC,IAAI;EAE/C;EAMAC,QAAQ;IAEN,IAAI,CAACC,KAAK,GAAE,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAEzBC,KAAK,EAAC,CAAC,EAAE,EAAC,CAACR,UAAU,CAACS,QAAQ,EAACT,UAAU,CAACU,KAAK,CAAC,CAAC;MAC/CC,QAAQ,EAAC,CAAC,EAAE,EAAC,CAACX,UAAU,CAACS,QAAQ,EAACT,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC;KAC5D,CAAC;EAEJ;EAGAC,UAAU;IAERC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,KAAK,CAACU,KAAK,CAAC;IAE7B,IAAI,CAACZ,IAAI,CAACE,KAAK,CAAC,IAAI,CAACA,KAAK,CAACU,KAAK,CAAC,CAACC,SAAS,CAACC,CAAC,IAAE;MAC7CJ,OAAO,CAACC,GAAG,CAACG,CAAC,CAAC;MACdJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/B,IAAI,CAACX,IAAI,CAACe,UAAU,CAACD,CAAC,CAAC;IACrB,CAAC,CAAC;EAER;;AAhCWjB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCN3BC,8BAAiC;MAKLA;QAAA,OAAYC,gBAAY;MAAA,EAAC;MAKjDD,8BAAuB;MACFA,qBAAK;MAAAA,iBAAQ;MAChCA,2BAA4E;MAC9EA,iBAAM;MAKNA,8BAAuB;MACCA,wBAAQ;MAAAA,iBAAQ;MACtCA,2BAAqF;MACvFA,iBAAM;MAENA,sBAAI;MACJA,0BAAI;MAA6EA,qCAAoB;MAAAA,iBAAI;MAE7GA,sBAAI;MACAA,kCAAqD;MAAAA,sBAAK;MAAAA,iBAAS;;;MAtB/DA,eAAmB;MAAnBA,qCAAmB","names":["Validators","LoginComponent","constructor","fb","auth","ngOnInit","login","group","Email","required","email","Password","maxLength","submitform","console","log","value","subscribe","x","storetoken","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\vikas.sonwane\\Workspace\\Feb-23-Dotnet\\DotNetCoreFullStackDevelopment\\DotNetCoreFullStackDevelopment002\\vsonwane_2768\\Q001\\Source\\Frontend\\exam\\src\\app\\login\\login.component.ts","C:\\Users\\vikas.sonwane\\Workspace\\Feb-23-Dotnet\\DotNetCoreFullStackDevelopment\\DotNetCoreFullStackDevelopment002\\vsonwane_2768\\Q001\\Source\\Frontend\\exam\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n\n  constructor(private fb:FormBuilder,private auth:AuthService){\n\n  }\n\n\n\n  login!:FormGroup;\n\n  ngOnInit(): void {\n\n    this.login= this.fb.group({\n\n     Email:['',[Validators.required,Validators.email]],\n       Password:['',[Validators.required,Validators.maxLength(8)]],\n    })\n\n  }\n\n\n  submitform(){\n\n    console.log(this.login.value)\n\n    this.auth.login(this.login.value).subscribe(x=>{\n      console.log(x);\n      console.log(\"login succefully\");\n      this.auth.storetoken(x);\n        })\n\n  }\n}\n","\n\n\n<div class=\"container mt-5 w-25\">\n\n\n\n\n  <form [formGroup]=\"login\" (ngSubmit)=\"submitform()\">\n\n\n\n\n    <div class=\"formGroup\">\n      <label for=\"Email\">Email</label>\n      <input type=\"email\" id=\"Email\" class=\"form-control\" formControlName=\"Email\">\n    </div>\n\n\n\n\n    <div class=\"formGroup\">\n      <label for=\"Password\">Password</label>\n      <input type=\"password\" id=\"Password\" class=\"form-control\" formControlName=\"Password\">\n    </div>\n\n    <br>\n    <p > <a routerLink=\"\\register\" class=\"text-dark text-decoration-none fw-bold h4\">Not have an account?</a></p>\n\n<br>\n    <button type=\"submit\" class=\"btn  btn-primary w-100\">login</button>\n  </form>\n\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}